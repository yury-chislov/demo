buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'io.qameta.allure', name: 'allure-gradle', version: '2.7.0'
    }
}

plugins {
    id 'java'
}
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

group 'com.mobiquity.testing'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '7.0.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile(group: 'org.apache.maven.plugins', name: 'maven-surefire-plugin', version: '3.0.0-M3') {
        exclude group: 'org.slf4j', module:'slf4j-jdk14'
    }
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.12'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'
}

apply plugin: 'io.qameta.allure'

allure {
    autoconfigure = true
    version = '2.10.0'
}

def chromeBrowserSuite = project.hasProperty("chromeBrowserSuite")
def crossBrowserSuite = project.hasProperty("crossBrowserSuite")
def firefoxBrowserSuite = project.hasProperty("firefoxBrowserSuite")


test {
    useTestNG() {
        useDefaultListeners = true

        if (chromeBrowserSuite) {
            suites "src/test/java/com/testing/webautomation/base/testSuits/chromeBrowserTest.xml"
        }
        if (crossBrowserSuite) {
            suites "src/test/java/com/testing/webautomation/base/testSuits/corssBrowserTest.xml"
        }
        if (firefoxBrowserSuite) {
            suites "src/test/java/com/testing/webautomation/base/testSuits/firefoxBrowserTest.xml"
        }
    }
}

